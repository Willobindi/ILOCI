(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      7252,        226]
NotebookOptionsPosition[      6192,        185]
NotebookOutlinePosition[      6558,        201]
CellTagsIndexPosition[      6515,        198]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["runpython.nb", "Section",
 CellChangeTimes->{{3.659808077263749*^9, 3.6598080886390142`*^9}, {
  3.66127030417729*^9, 3.66127031452665*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Uninstall", "[", "linkrfcomm", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.661271013443646*^9, 3.661271028922965*^9}}],

Cell["\<\
 ML_System is required to access the c program that calls python to run \
iloci2_graph.py to run the OLED display\
\>", "Text",
 CellChangeTimes->{{3.7014480185669403`*^9, 3.701448098885684*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"linkrfcomm", " ", "=", " ", 
   RowBox[{
   "Install", "[", "\"\</home/pi/projects/ML_System/ML_System\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6597217555815563`*^9, 3.659721815466332*^9}, 
   3.6598978317556067`*^9, {3.659900541527337*^9, 3.659900541567233*^9}, {
   3.659900637479245*^9, 3.65990066264614*^9}, 3.661271033057673*^9}],

Cell["linkdebug = Install[\"mike\", LinkMode -> Connect]", "Text",
 CellChangeTimes->{{3.659897843924386*^9, 3.659897846188583*^9}, {
   3.6598983235590687`*^9, 3.659898326169918*^9}, 3.6599005494786863`*^9}],

Cell["LinkOpen::linke : \"\[NoBreak]\"MathLink linkname already in use.\"\
\[NoBreak].\"", "Text", "MSG",
 CellChangeTimes->{3.659898026285845*^9, 3.659900549490819*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PYTHON", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.701448609463018*^9, 3.701448609465879*^9}}],

Cell["\<\
Initialize the rfcomm variable PYTHON
rfcomm[PYTHON] executes \[OpenCurlyDoubleQuote]sudo python \
/home/pi/projects/OLEDPython/iloci2_graph.py\[CloseCurlyDoubleQuote]
The function does not return until it is terminated by dropping the \
connection, 
and pushing the button, which causes the python script to exit. 
 The While loop terminates when the reboot 
button on GPIO 24 is held pressed at the same time as the save data switch*)\
\>", "Text",
 CellChangeTimes->{{3.7014485814377193`*^9, 3.7014486054508*^9}}],

Cell["Test the GPIO acces is good", "Text",
 CellChangeTimes->{{3.701448115318981*^9, 3.7014481271569157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", 
  RowBox[{"\"\<GPIO\>\"", ",", "24"}], "]"}]], "Input",
 CellChangeTimes->{3.701448140220255*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.70144814513346*^9, {3.7014481810093737`*^9, 3.7014482067359447`*^9}, 
   3.701448701740253*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gpio24", "=", 
  RowBox[{"24", "/.", 
   RowBox[{"DeviceRead", "[", 
    RowBox[{"\"\<GPIO\>\"", ",", "24"}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.70144864216891*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.701448643592437*^9}]
}, Open  ]],

Cell["\<\
rfcomm[PYTHON] executes \[OpenCurlyDoubleQuote]sudo python \
/home/pi/projects/OLEDPython/iloci2_graph.py\[CloseCurlyDoubleQuote]
The function does not return until it is terminated by dropping the \
connection, and pushing the button, which causes the python script to exit\
\>", "Text",
 CellChangeTimes->{{3.661271092589148*^9, 3.6612711993373737`*^9}, {
  3.701448079607917*^9, 3.701448085318606*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"runlisten", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"runlisten", ",", 
    RowBox[{
     RowBox[{"result", "=", 
      RowBox[{"rfcomm", "[", "PYTHON", "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"NOTE", ":", 
       RowBox[{
        RowBox[{"rfcomm", "[", "PYTHON", "]"}], " ", "has", " ", "to", " ", 
        "be", " ", "updated", " ", "with", " ", "new", " ", "file", " ", 
        "name"}]}], "*)"}], 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"result", "\[Equal]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<rfcomm(PYTHON) did not succeed - check the path to \
iloci2_graph.py\>\"", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Break", "[", "]"}], ";"}], ",", 
       RowBox[{"(*", "else", "*)"}], 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<python iloci2_graph.py terminated - restarting it..\>\"", "]"}],
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gpio24", "=", 
      RowBox[{"24", "/.", 
       RowBox[{"DeviceRead", "[", 
        RowBox[{"\"\<GPIO\>\"", ",", "24"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"gpio24", "\[Equal]", "0"}], ",", 
       RowBox[{"runlisten", "=", "False"}]}], "]"}], ";"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<gpio24 is \>\"", ",", "gpio24", ",", "\"\< runlisten is \>\"", ",", 
    "runlisten"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.701447978482873*^9, 3.7014479784847517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"python iloci2_graph.py terminated - restarting it..\"\>"], \
"Print",
 CellChangeTimes->{3.701448669914185*^9, 3.70144873204815*^9}],

Cell[BoxData["\<\"python iloci2_graph.py terminated - restarting it..\"\>"], \
"Print",
 CellChangeTimes->{3.701448669914185*^9, 3.701448772085244*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"gpio24 is \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" runlisten is \"\>", "\[InvisibleSpace]", 
   "False"}],
  SequenceForm["gpio24 is ", 0, " runlisten is ", False],
  Editable->False]], "Print",
 CellChangeTimes->{3.701448669914185*^9, 3.701448773094198*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{901, 1021},
WindowMargins->{{23, Automatic}, {-18, Automatic}},
FrontEndVersion->"10.0 for Linux ARM (32-bit) (February 3, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 146, 2, 65, "Section"],
Cell[729, 26, 155, 3, 30, "Input"],
Cell[887, 31, 205, 4, 32, "Text"],
Cell[1095, 37, 385, 8, 32, "Input"],
Cell[1483, 47, 208, 2, 32, "Text"],
Cell[1694, 51, 169, 2, 28, "Text"],
Cell[1866, 55, 138, 3, 30, "Input"],
Cell[2007, 60, 526, 10, 137, "Text"],
Cell[2536, 72, 111, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[2672, 77, 140, 3, 30, "Input"],
Cell[2815, 82, 200, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3052, 92, 195, 5, 30, "Input"],
Cell[3250, 99, 70, 1, 30, "Output"]
}, Open  ]],
Cell[3335, 103, 415, 7, 74, "Text"],
Cell[CellGroupData[{
Cell[3775, 114, 1715, 47, 185, "Input"],
Cell[CellGroupData[{
Cell[5515, 165, 150, 2, 22, "Print"],
Cell[5668, 169, 151, 2, 22, "Print"],
Cell[5822, 173, 330, 7, 22, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
